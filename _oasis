OASISFormat: 0.4
Name:        LILiS
Version:     0.1
Synopsis:    Library to Interpret Lindenmayer Systems
Description: A Library to interpret, evaluate and draw L-systems.
Authors:     Gabriel Radanne <drupyog@zoho.com>
License:     MIT
Plugins:     META (0.3), DevFiles (0.3)
Homepage:    https://github.com/Drup/LILiS

AlphaFeatures: pure_interface, compiled_setup_ml
BuildTools: ocamlbuild

OCamlVersion: >= 4.01
AlphaFeatures: ocamlbuild_more_args
XOCamlbuildPluginTags: package(cppo_ocamlbuild)


### Various flags ###

Flag sequence
  Description: Build the Sequence interface and use it for glilis.exe
  Default: true

Flag containers
  Description: Build the Containers interface
  Default: false

Flag cfstream
  Description: Build the CFStream interface
  Default: false

Flag core
  Description: Build the Core.Sequence interface
  Default: false

Flag cairo
  Description: Enable the cairo backend for png and gtk output
  Default: true

Flag tyxml
  Description: Enable the tyxml backend for svg output
  Default: true

Flag js_of_ocaml
  Description: Enable the Dom backend for js_of_ocaml
  Default: false

Flag executable
  Description: Build the executable glilis_ex.native
  Default: false


### Minicalc ###
# A small library to build and compute arithmetic expression trees.

Library calc
  Path: calc
  BuildTools: ocamlbuild
  Modules:
    Calc, CalcUtils
  InternalModules:
    CalcLexer, CalcParser
  BuildDepends:
    batteries



### Lilis ###
# Library for Lsystems.

Library lilis
  Path: lilis
  BuildDepends: batteries, calc
  Modules:
    Lilis, LisUtils, LisOptim
  InternalModules:
    LisCommon, LisLexer, LisParser

# Various streams implementation for lilis.

Library sequence
  Build$: flag(sequence)
  FindLibParent: lilis
  Path: streams/sequence
  BuildDepends: sequence, lilis
  Modules: LisSequence

Library containers
  Build$: flag(containers)
  FindLibParent: lilis
  Path: streams/containers
  BuildDepends: containers, lilis
  Modules: LisCC

Library cfstream
  Build$: flag(cfstream)
  FindLibParent: lilis
  Path: streams/cfstream
  BuildDepends: threads, cfstream, lilis
  Modules: LisCFStream

Library core
  Build$: flag(core)
  FindLibParent: lilis
  Path: streams/core
  BuildDepends: core_kernel, lilis
  Modules: LisCore

Library batteries
  FindLibParent: lilis
  Path: streams/batteries
  BuildDepends: batteries, lilis
  Modules: LisBatteries



### Glilis ###
# Graphical extensions of lilis.

Library glilis
  Path: glilis
  Modules: Glilis
  BuildDepends: lilis

Library cairo
  FindlibParent: glilis
  Build$: flag(cairo)
  Path: glilis/cairo
  Modules: LisCairo
  BuildDepends: glilis, cairo2, cairo2.lablgtk2

Library tyxml
  FindlibParent: glilis
  Build$: flag(tyxml)
  Path: glilis/tyxml
  Modules: LisTyxml
  BuildDepends: glilis, tyxml

Library jsoo
  FindlibParent: glilis
  Build$: flag(js_of_ocaml)
  Path: glilis/jsoo
  Modules: LisJsoo
  BuildDepends: glilis, js_of_ocaml, js_of_ocaml.graphics

### Executable ###

Executable glilis
  Build$: flag(cairo) && flag(executable) && flag(sequence)
  BuildDepends: cmdliner, cairo2.lablgtk2, glilis, glilis.cairo, lilis.sequence
  Install: false
  Path: glilis/executable
  MainIs: glilis_ex.ml
  CompiledObject: best


### Tests ###

Library bench_common
  Path: test
  Build$: flag(tests)
  Install: false
  CompiledObject: best
  Modules: Bench_common
  BuildDepends: lilis, benchmark

Executable bench_streams
  Path: test
  Build$: flag(tests)
  Install: false
  CompiledObject: best
  MainIs: bench_streams.ml
  BuildDepends: bench_common

Executable bench_vonkoch
  Path: test
  Build$: flag(tests) && flag(sequence)
  Install: false
  CompiledObject: best
  MainIs: bench_vonkoch.ml
  BuildDepends: bench_common, lilis.sequence

Executable bench_quick
  Path: test
  Build$: flag(tests) && flag(sequence)
  Install: false
  CompiledObject: best
  MainIs: bench_quick.ml
  BuildDepends: bench_common, lilis.sequence

Executable bench_optims
  Path: test
  Build$: flag(tests) && flag(sequence)
  Install: false
  CompiledObject: best
  BuildTools: ocamlbuild
  MainIs: bench_optims.ml
  BuildDepends: bench_common, lilis.sequence



### Misc ###

AlphaFeatures: ocamlbuild_more_args
Document lilis
  Install: false
  Type: ocamlbuild (0.3)
  BuildTools: ocamldoc

  Title: API reference for LILiS
  XOCamlbuildPath: .
  XOCamlbuildExtraArgs:
    "-docflags '-colorize-code -short-functors -charset utf-8'"
  XOCamlbuildLibraries:
    calc,
    lilis, lilis.sequence, lilis.batteries, lilis.containers, lilis.cfstream,
    glilis, glilis.cairo, glilis.tyxml

SourceRepository master
  Type: git
  Location: https://github.com/Drup/LILiS.git
  Branch: master
  Browser: https://github.com/Drup/LILiS