
<**/*.ml> : -bin-annot, -short-paths

true : use_menhir, explain

# OASIS_START
# DO NOT EDIT (digest: d5ad7501bc6bd1196c434fadfd0fc7e8)
# Ignore VCS directories, you can use the same kind of rule outside 
# OASIS_START/STOP if you want to exclude directories that contains 
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library minicalc
"mini_calc/minicalc.cmxs": use_minicalc
<mini_calc/*.ml{,i}>: pkg_batteries
# Library lilis
"lilis/lilis.cmxs": use_lilis
<lilis/*.ml{,i}>: use_minicalc
<lilis/*.ml{,i}>: pkg_batteries
<lilis/*.ml{,i}>: pkg_sequence
# Library glilis
"glilis/glilis.cmxs": use_glilis
# Library glilis.cairo
"glilis/glilis.cairo.cmxs": use_glilis.cairo
# Library glilis.tyxml
"glilis/glilis.tyxml.cmxs": use_glilis.tyxml
# Executable glilis
<glilis/glilis_ex.{native,byte}>: use_glilis.tyxml
<glilis/glilis_ex.{native,byte}>: use_glilis.cairo
<glilis/glilis_ex.{native,byte}>: use_glilis
<glilis/glilis_ex.{native,byte}>: use_lilis
<glilis/glilis_ex.{native,byte}>: use_minicalc
<glilis/glilis_ex.{native,byte}>: pkg_cmdliner
<glilis/glilis_ex.{native,byte}>: pkg_tyxml
<glilis/glilis_ex.{native,byte}>: pkg_cairo2.lablgtk2
<glilis/glilis_ex.{native,byte}>: pkg_cairo2
<glilis/glilis_ex.{native,byte}>: pkg_batteries
<glilis/glilis_ex.{native,byte}>: pkg_sequence
<glilis/*.ml{,i}>: use_glilis.tyxml
<glilis/*.ml{,i}>: use_glilis.cairo
<glilis/*.ml{,i}>: use_glilis
<glilis/*.ml{,i}>: use_lilis
<glilis/*.ml{,i}>: use_minicalc
<glilis/*.ml{,i}>: pkg_cmdliner
<glilis/*.ml{,i}>: pkg_tyxml
<glilis/*.ml{,i}>: pkg_cairo2.lablgtk2
<glilis/*.ml{,i}>: pkg_cairo2
<glilis/*.ml{,i}>: pkg_batteries
<glilis/*.ml{,i}>: pkg_sequence
# Executable bench_streams
<test/bench_streams.{native,byte}>: use_lilis
<test/bench_streams.{native,byte}>: use_minicalc
<test/bench_streams.{native,byte}>: pkg_benchmark
<test/bench_streams.{native,byte}>: pkg_batteries
<test/bench_streams.{native,byte}>: pkg_sequence
# Executable bench_vonkoch
<test/bench_vonkoch.{native,byte}>: use_lilis
<test/bench_vonkoch.{native,byte}>: use_minicalc
<test/bench_vonkoch.{native,byte}>: pkg_benchmark
<test/bench_vonkoch.{native,byte}>: pkg_batteries
<test/bench_vonkoch.{native,byte}>: pkg_sequence
# Executable bench_quick
<test/bench_quick.{native,byte}>: use_lilis
<test/bench_quick.{native,byte}>: use_minicalc
<test/bench_quick.{native,byte}>: pkg_benchmark
<test/bench_quick.{native,byte}>: pkg_batteries
<test/bench_quick.{native,byte}>: pkg_sequence
<test/*.ml{,i}>: use_lilis
<test/*.ml{,i}>: use_minicalc
<test/*.ml{,i}>: pkg_benchmark
<test/*.ml{,i}>: pkg_batteries
<test/*.ml{,i}>: pkg_sequence
# OASIS_STOP
